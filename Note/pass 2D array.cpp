/*
傳遞二微陣列:
1.傳值
2.傳pointer
3.開全域
*/

#include <iostream>
using namespace std;
void func1(int b[5][5]) // 傳值
{
    for (int i = 0; i < 5; i++)
    {
        for (int j = 0; j < 5; j++)
        {
            cout << b[i][j];
        }
        cout << "\n";
    }
    return;
}
void func2(int *b) // 傳pointer
{
    /*
    int a[5][5];
    Note:陣列在記憶體中示一維排列[ [0,1,2,3,4],[0,1,2,3,4],[0,1,2,3,4],[0,1,2,3,4],[0,1,2,3,4] ]
    &a[0][0]是指向最右邊的地方,所以b+n就是從最左邊的0往右n個位置的東西加上,*()會得到該位置的值
    例如 *(b+1*5+1*1) 就是從b[0][0]開始向右數(1*5+1*1)=6個位置就是b[1][1]的值，也就是1
    特別注意這邊的5代表的是第二個維度的大小
    舉例 c[3][3][3]
    ->記憶體中的排列[ [ [0,1,2],[0,1,2],[0,1,2] ],[ [0,1,2],[0,1,2],[0,1,2] ],[ [0,1,2],[0,1,2],[0,1,2] ] ]
    取[1][2][2] => *(c+1*3*3+2*3+2*1)=*(c+17)
    */
    for (int i = 0; i < 5; i++)
    {
        for (int j = 0; j < 5; j++)
        {
            cout << *(b + i * 5 + j * 1);
        }
        cout << "\n";
    }
}
int main()
{
    int a[5][5];
    for (int i = 0; i < 5; i++)
    {
        for (int j = 0; j < 5; j++)
        {
            a[i][j] = j;
        }
    }

    func1(a);
    func2(&a[0][0]);
}